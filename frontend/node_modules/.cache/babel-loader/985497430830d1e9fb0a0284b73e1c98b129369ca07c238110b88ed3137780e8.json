{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Atik\\\\Videos\\\\Medicine\\\\frontend\\\\src\\\\pages\\\\OrdersManagement.js\",\n  _s = $RefreshSig$();\n/*\r\n * ORDERS MANAGEMENT COMPONENT - E-COMMERCE ORDER PROCESSING SYSTEM\r\n * \r\n * This component demonstrates:\r\n * 1. Order lifecycle management in React\r\n * 2. Real-time order status updates via Django API\r\n * 3. Client-side filtering and data manipulation\r\n * 4. Order fulfillment workflow (pending → processing → shipped → delivered)\r\n * 5. Admin interface for order tracking and management\r\n * \r\n * DJANGO INTEGRATION:\r\n * - Fetches orders from Django Order model via REST API\r\n * - Updates order status through Django backend\r\n * - Displays customer information from Django User model\r\n * - Handles order workflow states and transitions\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersManagement = () => {\n  _s();\n  /*\r\n   * COMPONENT STATE MANAGEMENT\r\n   * \r\n   * This component manages order data and filtering:\r\n   * - orders: Array of all orders from Django backend\r\n   * - loading: Loading state for API operations\r\n   * - selectedStatus: Current filter for order status (client-side filtering)\r\n   */\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedStatus, setSelectedStatus] = useState('all');\n\n  /*\r\n   * COMPONENT LIFECYCLE - FETCH ORDERS ON MOUNT\r\n   * \r\n   * Load all orders when component first renders.\r\n   * This is the typical pattern for data-driven components.\r\n   */\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  /*\r\n   * FETCH ORDERS FROM DJANGO BACKEND\r\n   * \r\n   * This function demonstrates:\r\n   * 1. Authenticated API calls to Django Order endpoints\r\n   * 2. Fetching relational data (orders with customer info)\r\n   * 3. Error handling for network requests\r\n   * 4. Loading state management for better UX\r\n   */\n  const fetchOrders = async () => {\n    try {\n      // Call Django admin endpoint to get all orders with customer details\n      const response = await fetch('/api/accounts/admin/orders/', {\n        headers: {\n          // JWT authentication required for admin access\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Update component state with order data from Django\n        setOrders(data);\n      }\n    } catch (error) {\n      // Silent error handling - could implement user notifications\n    } finally {\n      // Always stop loading, whether success or error\n      setLoading(false);\n    }\n  };\n\n  /*\r\n   * UPDATE ORDER STATUS - ORDER WORKFLOW MANAGEMENT\r\n   * \r\n   * This function manages the order fulfillment lifecycle:\r\n   * 1. Sends PUT request to Django to update order status\r\n   * 2. Handles order state transitions (pending → processing → shipped → delivered)\r\n   * 3. Provides real-time updates to order tracking\r\n   * 4. Demonstrates admin control over order workflow\r\n   */\n  const updateOrderStatus = async (orderId, newStatus) => {\n    try {\n      // Send PUT request to Django to update specific order's status\n      const response = await fetch(`/api/accounts/admin/orders/${orderId}/status/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n        },\n        // Send new status to Django Order model\n        body: JSON.stringify({\n          status: newStatus\n        })\n      });\n      if (response.ok) {\n        // Refresh orders list to show updated status\n        fetchOrders();\n      }\n    } catch (error) {\n      // Silent error handling\n    }\n  };\n\n  /*\r\n   * CLIENT-SIDE FILTERING - FILTER ORDERS BY STATUS\r\n   * \r\n   * This demonstrates client-side data filtering in React:\r\n   * - Uses JavaScript array filter method\r\n   * - Filters based on selectedStatus state\r\n   * - Provides instant filtering without server requests\r\n   * - Shows conditional logic with ternary operator\r\n   */\n  const filteredOrders = selectedStatus === 'all' ? orders // Show all orders\n  : orders.filter(order => order.status === selectedStatus); // Filter by status\n\n  // Loading state - show spinner while fetching orders\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n  /*\r\n   * MAIN COMPONENT RENDER - ORDER MANAGEMENT INTERFACE\r\n   * \r\n   * This renders a comprehensive order management system with:\r\n   * 1. Status filtering dropdown for quick order searches\r\n   * 2. Tabular display of order information from Django\r\n   * 3. Visual status indicators with color coding\r\n   * 4. Inline status editing for order workflow management\r\n   * 5. Responsive design for different screen sizes\r\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-800\",\n        children: \"Orders Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStatus,\n        onChange: e => setSelectedStatus(e.target.value),\n        className: \"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"processing\",\n          children: \"Processing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"shipped\",\n          children: \"Shipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"delivered\",\n          children: \"Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cancelled\",\n          children: \"Cancelled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"bg-white divide-y divide-gray-200\",\n          children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: [\"#\", order.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: order.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: new Date(order.created_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: [\"$\", order.total_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs rounded-full ${order.status === 'delivered' ? 'bg-green-100 text-green-800' : order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : order.status === 'processing' ? 'bg-blue-100 text-blue-800' : order.status === 'shipped' ? 'bg-purple-100 text-purple-800' : 'bg-red-100 text-red-800' // Cancelled or other status\n                }`,\n                children: order.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: order.status,\n                onChange: e => updateOrderStatus(order.id, e.target.value),\n                className: \"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"processing\",\n                  children: \"Processing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"shipped\",\n                  children: \"Shipped\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"delivered\",\n                  children: \"Delivered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cancelled\",\n                  children: \"Cancelled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, order.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(OrdersManagement, \"CyGCWU+aLNoZP7TSlJ2b+tdh6wI=\");\n_c = OrdersManagement;\nexport default OrdersManagement;\nvar _c;\n$RefreshReg$(_c, \"OrdersManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OrdersManagement","_s","orders","setOrders","loading","setLoading","selectedStatus","setSelectedStatus","fetchOrders","response","fetch","headers","localStorage","getItem","ok","data","json","error","updateOrderStatus","orderId","newStatus","method","body","JSON","stringify","status","filteredOrders","filter","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","id","user_name","Date","created_at","toLocaleDateString","total_amount","_c","$RefreshReg$"],"sources":["C:/Users/Atik/Videos/Medicine/frontend/src/pages/OrdersManagement.js"],"sourcesContent":["/*\r\n * ORDERS MANAGEMENT COMPONENT - E-COMMERCE ORDER PROCESSING SYSTEM\r\n * \r\n * This component demonstrates:\r\n * 1. Order lifecycle management in React\r\n * 2. Real-time order status updates via Django API\r\n * 3. Client-side filtering and data manipulation\r\n * 4. Order fulfillment workflow (pending → processing → shipped → delivered)\r\n * 5. Admin interface for order tracking and management\r\n * \r\n * DJANGO INTEGRATION:\r\n * - Fetches orders from Django Order model via REST API\r\n * - Updates order status through Django backend\r\n * - Displays customer information from Django User model\r\n * - Handles order workflow states and transitions\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst OrdersManagement = () => {\r\n    /*\r\n     * COMPONENT STATE MANAGEMENT\r\n     * \r\n     * This component manages order data and filtering:\r\n     * - orders: Array of all orders from Django backend\r\n     * - loading: Loading state for API operations\r\n     * - selectedStatus: Current filter for order status (client-side filtering)\r\n     */\r\n    const [orders, setOrders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedStatus, setSelectedStatus] = useState('all');\r\n\r\n    /*\r\n     * COMPONENT LIFECYCLE - FETCH ORDERS ON MOUNT\r\n     * \r\n     * Load all orders when component first renders.\r\n     * This is the typical pattern for data-driven components.\r\n     */\r\n    useEffect(() => {\r\n        fetchOrders();\r\n    }, []);\r\n\r\n    /*\r\n     * FETCH ORDERS FROM DJANGO BACKEND\r\n     * \r\n     * This function demonstrates:\r\n     * 1. Authenticated API calls to Django Order endpoints\r\n     * 2. Fetching relational data (orders with customer info)\r\n     * 3. Error handling for network requests\r\n     * 4. Loading state management for better UX\r\n     */\r\n    const fetchOrders = async () => {\r\n        try {\r\n            // Call Django admin endpoint to get all orders with customer details\r\n            const response = await fetch('/api/accounts/admin/orders/', {\r\n                headers: {\r\n                    // JWT authentication required for admin access\r\n                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n                }\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // Update component state with order data from Django\r\n                setOrders(data);\r\n            }\r\n        } catch (error) {\r\n            // Silent error handling - could implement user notifications\r\n        } finally {\r\n            // Always stop loading, whether success or error\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    /*\r\n     * UPDATE ORDER STATUS - ORDER WORKFLOW MANAGEMENT\r\n     * \r\n     * This function manages the order fulfillment lifecycle:\r\n     * 1. Sends PUT request to Django to update order status\r\n     * 2. Handles order state transitions (pending → processing → shipped → delivered)\r\n     * 3. Provides real-time updates to order tracking\r\n     * 4. Demonstrates admin control over order workflow\r\n     */\r\n    const updateOrderStatus = async (orderId, newStatus) => {\r\n        try {\r\n            // Send PUT request to Django to update specific order's status\r\n            const response = await fetch(`/api/accounts/admin/orders/${orderId}/status/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n                },\r\n                // Send new status to Django Order model\r\n                body: JSON.stringify({ status: newStatus })\r\n            });\r\n            \r\n            if (response.ok) {\r\n                // Refresh orders list to show updated status\r\n                fetchOrders();\r\n            }\r\n        } catch (error) {\r\n            // Silent error handling\r\n        }\r\n    };\r\n\r\n    /*\r\n     * CLIENT-SIDE FILTERING - FILTER ORDERS BY STATUS\r\n     * \r\n     * This demonstrates client-side data filtering in React:\r\n     * - Uses JavaScript array filter method\r\n     * - Filters based on selectedStatus state\r\n     * - Provides instant filtering without server requests\r\n     * - Shows conditional logic with ternary operator\r\n     */\r\n    const filteredOrders = selectedStatus === 'all'\r\n        ? orders                                                    // Show all orders\r\n        : orders.filter(order => order.status === selectedStatus);  // Filter by status\r\n\r\n    // Loading state - show spinner while fetching orders\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex justify-center items-center min-h-screen\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /*\r\n     * MAIN COMPONENT RENDER - ORDER MANAGEMENT INTERFACE\r\n     * \r\n     * This renders a comprehensive order management system with:\r\n     * 1. Status filtering dropdown for quick order searches\r\n     * 2. Tabular display of order information from Django\r\n     * 3. Visual status indicators with color coding\r\n     * 4. Inline status editing for order workflow management\r\n     * 5. Responsive design for different screen sizes\r\n     */\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n            {/* HEADER WITH FILTERING */}\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-2xl font-semibold text-gray-800\">Orders Management</h2>\r\n                \r\n                {/* \r\n                 * STATUS FILTER DROPDOWN\r\n                 * \r\n                 * This dropdown provides client-side filtering:\r\n                 * - Controlled component (value from state)\r\n                 * - onChange updates selectedStatus state\r\n                 * - Filters are applied via filteredOrders computed property\r\n                 * - No server requests needed for filtering\r\n                 */}\r\n                <select\r\n                    value={selectedStatus}\r\n                    onChange={(e) => setSelectedStatus(e.target.value)}\r\n                    className=\"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                >\r\n                    <option value=\"all\">All Orders</option>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"processing\">Processing</option>\r\n                    <option value=\"shipped\">Shipped</option>\r\n                    <option value=\"delivered\">Delivered</option>\r\n                    <option value=\"cancelled\">Cancelled</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* ORDERS TABLE - RESPONSIVE DATA DISPLAY */}\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    {/* TABLE HEADER */}\r\n                    <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Order ID</th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total</th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    {/* TABLE BODY - DYNAMIC ORDER ROWS */}\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {/* \r\n                         * ARRAY MAPPING - RENDER FILTERED ORDERS\r\n                         * \r\n                         * Maps over filteredOrders (not raw orders) to show filtered results.\r\n                         * Each row displays order information from Django models.\r\n                         */}\r\n                        {filteredOrders.map((order) => (\r\n                            <tr key={order.id}>\r\n                                {/* ORDER ID COLUMN */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">#{order.id}</td>\r\n                                \r\n                                {/* CUSTOMER NAME COLUMN - From Django User model */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">{order.user_name}</td>\r\n                                \r\n                                {/* ORDER DATE COLUMN - JavaScript Date formatting */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    {/* Convert Django datetime to readable format */}\r\n                                    {new Date(order.created_at).toLocaleDateString()}\r\n                                </td>\r\n                                \r\n                                {/* ORDER TOTAL COLUMN - From Django Order model */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">${order.total_amount}</td>\r\n                                \r\n                                {/* STATUS COLUMN - VISUAL STATUS INDICATORS */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    {/* \r\n                                     * CONDITIONAL STYLING - Status badges with color coding\r\n                                     * \r\n                                     * Each order status gets different colors for quick visual identification:\r\n                                     * - Green: Delivered (completed)\r\n                                     * - Yellow: Pending (needs attention)\r\n                                     * - Blue: Processing (in progress)\r\n                                     * - Purple: Shipped (in transit)\r\n                                     * - Red: Cancelled (failed/cancelled)\r\n                                     */}\r\n                                    <span className={`px-2 py-1 text-xs rounded-full ${\r\n                                        order.status === 'delivered' ? 'bg-green-100 text-green-800' :\r\n                                        order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                                        order.status === 'processing' ? 'bg-blue-100 text-blue-800' :\r\n                                        order.status === 'shipped' ? 'bg-purple-100 text-purple-800' :\r\n                                        'bg-red-100 text-red-800'  // Cancelled or other status\r\n                                    }`}>\r\n                                        {order.status}\r\n                                    </span>\r\n                                </td>\r\n                                \r\n                                {/* ACTIONS COLUMN - ORDER STATUS MANAGEMENT */}\r\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                    {/* \r\n                                     * STATUS UPDATE DROPDOWN\r\n                                     * \r\n                                     * This dropdown allows admins to change order status:\r\n                                     * - Controlled component with current order status\r\n                                     * - onChange triggers updateOrderStatus function\r\n                                     * - Immediately updates Django backend\r\n                                     * - Demonstrates inline editing for workflow management\r\n                                     */}\r\n                                    <select\r\n                                        value={order.status}\r\n                                        onChange={(e) => updateOrderStatus(order.id, e.target.value)}\r\n                                        className=\"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                                    >\r\n                                        <option value=\"pending\">Pending</option>\r\n                                        <option value=\"processing\">Processing</option>\r\n                                        <option value=\"shipped\">Shipped</option>\r\n                                        <option value=\"delivered\">Delivered</option>\r\n                                        <option value=\"cancelled\">Cancelled</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}